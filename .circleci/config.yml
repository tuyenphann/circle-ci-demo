version: 2.1

executors:
  node14:
    docker:
      - image: circleci/node:14
    working_directory: ~/project

commands:
  merge:
    description: "Compare and pull changes"
    parameters:
      git-username:
        type: string
        default: tuyenphann
      git-email:
        type: string
        default: tuyenphan@kms-technology.com
      target-branch:
        type: enum
        enum: [local/test1, local/test2]
        default: local/test1
      source-branch:
        type: enum
        enum: [main, local/test1, local/test2]
        default: main
    steps:
      - run:
          name: Update remote
          command: git remote update
      - run:
          name: Compare and pull changes
          command: |
            UPSTREAM=origin/<< parameters.source-branch >>
            LOCAL=$(git rev-parse @)
            REMOTE=$(git rev-parse "$UPSTREAM")
            BASE=$(git merge-base @ "$UPSTREAM")

            if [ $LOCAL = $REMOTE ]; then
              echo "ðŸ”¥ << parameters.target-branch >> branch is up-to-date as compared with << parameters.source-branch >> branch"
              exit 0
            elif [ $REMOTE = $BASE ]; then
              echo "ðŸ”¥ << parameters.target-branch >> branch is ahead of << parameters.source-branch >> branch"
              exit 0
            else
              echo "ðŸ”¥ Configuring Git"
              git config user.name "<< parameters.git-username >>"
              git config user.email "<< parameters.git-email >>"
              git config pull.rebase false

              echo "ðŸ”¥ Pulling from << parameters.source-branch >>"
              git pull --no-edit origin << parameters.source-branch >>
            fi
  push:
    description: "Push changes"
    parameters:
      git-username:
        type: string
        default: tuyenphann
      git-email:
        type: string
        default: tuyenphan@kms-technology.com
      target-branch:
        type: enum
        enum: [local/test1, local/test2]
        default: local/test1
    steps:
      - run:
          name: Push changes
          command: git push origin << parameters.target-branch >>
  build-and-deploy:
    description: "Build and deploy project"
    parameters:
      env:
        type: enum
        enum: [test1, test2]
        default: test1
    steps:
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Configure environment variables
          command: cp -a ./envs/<< parameters.env >>/. ./src/variables/
      - run:
          name: Build project
          command: npm run build
      - run:
          name: Install Firebase Tools
          command: npm install --prefix=$HOME/.local --global firebase-tools
      - run:
          name: Deploy to Firebase
          command: firebase deploy --only hosting:<< parameters.env >> --token ${FIREBASE_TOKEN}

jobs:
  merge-and-deploy-test1:
    executor: node14
    description: "Merge and deploy test1"
    steps:
      - checkout
      - merge:
          target-branch: local/test1
          source-branch: main
      - push:
          target-branch: local/test1
      - build-and-deploy:
          env: test1
  merge-and-deploy-test2:
    executor: node14
    description: "Merge test2"
    steps:
      - checkout
      - merge:
          target-branch: local/test2
          source-branch: main
      - merge:
          target-branch: local/test2
          source-branch: local/test1
      - push:
          target-branch: local/test2
      - build-and-deploy:
          env: test2

workflows:
  deploy-test1:
    jobs:
      - merge-and-deploy-test1:
          filters:
            branches:
              only:
                - main
  deploy-test2:
    jobs:
      - merge-and-deploy-test2:
          filters:
            branches:
              only:
                - main